- name: set-up build environment
  become: yes
  become_user: build
  block:

    - name: Have {{ tools_dir }}
      file: path={{ tools_dir }} state=directory
    - name: Have {{ downloads_dir }}
      file: path={{ downloads_dir }} state=directory
    - name: Have {{ jdks_dir }}
      file: path={{ jdks_dir }} state=directory
    - name: Have /home/build/.m2
      file: path=/home/build/.m2 state=directory

    - name: Have Maven {{ maven_version }}
      get_url:
        url: http://mirror.netcologne.de/apache.org/maven/maven-3/{{ maven_version }}/binaries/apache-maven-{{ maven_version }}-bin.tar.gz
        dest: "{{ downloads_dir }}"
    - name: Have Maven {{ maven_version }} unpacked
      unarchive:
        src: "{{ downloads_dir }}/apache-maven-{{ maven_version }}-bin.tar.gz"
        dest: "{{ tools_dir }}"
        remote_src: True
        creates: "{{ tools_dir }}/apache-maven-{{ maven_version }}"

    - name: Have Java 11
      get_url:
        url: https://github.com/AdoptOpenJDK/openjdk11-upstream-binaries/releases/download/jdk-{{ jdk_lts }}%2B{{ jdk_lts_build }}/OpenJDK11U-jdk_x64_linux_{{ jdk_lts }}_{{ jdk_lts_build }}.tar.gz
        dest: "{{ downloads_dir }}/OpenJDK11U-jdk_x64_linux_{{ jdk_lts }}_{{ jdk_lts_build }}.tar.gz"
    - name: Have Java 11 unpacked
      unarchive:
        src: "{{ downloads_dir }}/OpenJDK11U-jdk_x64_linux_{{ jdk_lts }}_{{ jdk_lts_build }}.tar.gz"
        dest: "{{ jdks_dir }}"
        remote_src: True
        creates: "{{ jdks_dir }}/openjdk-{{ jdk_lts }}+{{ jdk_lts_build }}"

    - name: Have Java 15
      get_url:
        url: https://download.java.net/java/GA/jdk15.0.1/51f4f36ad4ef43e39d0dfdbaf6549e32/9/GPL/openjdk-15.0.1_linux-aarch64_bin.tar.gz
        dest: "{{ downloads_dir }}/openjdk-15.0.1_linux-x64_bin.tar.gz"
    - name: Have Java 15 unpacked
      unarchive:
        src: "{{ downloads_dir }}/openjdk-15.0.1_linux-x64_bin.tar.gz"
        dest: "{{ jdks_dir }}"
        remote_src: True
        creates: "{{ jdks_dir }}/jdk-15.0.1"

    - name: Have Java 8 with JavaFX
      get_url:
        url: https://cdn.azul.com/zulu/bin/zulu8.46.0.19-ca-jdk8.0.252-linux_x64.tar.gz
        dest: "{{ downloads_dir }}/zulu8.46.0.19-ca-jdk8.0.252-linux_x64.tar.gz"
    - name: Have Java 8 with JavaFX unpacked
      unarchive:
        src: "{{ downloads_dir }}/zulu8.46.0.19-ca-jdk8.0.252-linux_x64.tar.gz"
        dest: "{{ jdks_dir }}"
        remote_src: True
        creates: "{{ jdks_dir }}/zulu8.46.0.19-ca-jdk8.0.252-linux_x64"

    - name: Have toolchains.xml
      copy:
        src: toolchains.xml
        dest: /home/build/.m2/toolchains.xml
        mode: 0600
    - name: Have settings.xml
      copy:
        src: settings.xml
        dest: /home/build/.m2/settings.xml
        mode: 0600

    # run this to switch JDK versions: sudo alternatives --config java_home
    - name: set-up alternatives
      become: yes
      become_user: root
      block:
        - name: Have /usr/lib/jvm
          file: path=/usr/lib/jvm state=directory
        - name: Have Maven as alternative
          alternatives:
            name: mvn
            link: /usr/bin/mvn
            path: "{{ tools_dir }}/apache-maven-{{ maven_version }}/bin/mvn"
        - name: Have mvnDebug as alternative
          alternatives:
            name: mvnDebug
            link: /usr/bin/mvnDebug
            path: "{{ tools_dir }}/apache-maven-{{ maven_version }}/bin/mvnDebug"

        - name: Have Java 11 as alternative
          alternatives:
            name: java_home
            link: /usr/lib/jvm/java_home
            path: "{{ jdks_dir }}/openjdk-{{ jdk_lts }}+{{ jdk_lts_build }}"
        - name: Have Java 15 as alternative
          alternatives:
            name: java_home
            link: /usr/lib/jvm/java_home
            path: "{{ jdks_dir }}/jdk-15.0.1"
        - name: Have Java 8 as alternative
          alternatives:
            name: java_home
            link: /usr/lib/jvm/java_home
            path: "{{ jdks_dir }}/zulu8.46.0.19-ca-jdk8.0.252-linux_x64"
